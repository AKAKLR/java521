数据 

描述客观事物的数字，字符，能输入计算机里的各种符号的集合
数据元素
图像，声音之类的都是数据
数据元素
数据的基本单位。
计算机程序中，通常把数据元素当一个整体进行处理
描述一个学生信息的一条记录就是一个数据元素。
数据元素通常由若干个数据项组成
如：
描述学生信息的姓名学号，
数据对象
一组相同性质的数据元素的集合就是数据对象
比如；
比如所有学生的集合。
数据结构
相互之间存在一种或多种特定关系的集合叫做数据结构。
数据结构就是数据元素之间的关系。
分为逻辑结构和物理结构。



数据的逻辑结构有四种
集合：
数据仅仅是属于一个集合没有其他的关系。

线性：
描述一个一对一的关系
树形：
描述一对多的关系
图形:
多对多的关系。


数据的逻辑结构一般采用二元组的形式来定义：
数据结构（D,S）
D；数据元素的集合
S；d是数据之间关系的集合
二元组set=（D,S）
其中
例1
D={01，02，03，04，05，06}
S={}
在set集合中，数据元素除了属于同一个元素外不属于任何一个结构。
例2
lin=(D,S)
D={01，02，03，04，05，06}
S={<01,04><04,06><06,02><02,05><05,03>}
除了01其他的元素前面的都有元素
除了03其他元素后面都有元素
01以外都有前驱
03以外都有后继
这个是线性关系
tree=(D,S)
D={01，02，03，04，05，06}
S={<01,02>,<01,03>,<02,04>,<02,05>}
有一个前驱但是有多个后继
顺序存储：一块连续的空间，数据之间紧挨在一起，数据的前驱和后继关系可以通过数据元素在内存中的位置反应出来
链式存储；在内存中元素存储地址没有连在一起，但是后一个元素可以把前一个元素链子一起



抽象数据类型
数据类型
一组性质相同的数据的集合及该数据集合上操作的总成，
如java中的int类型：数据的集合，在数据上的操作，加减乘除。。
抽象数据类型
由一组数据模型上的一组操作
只考虑逻辑特性，不考虑实现
抽象的数据类型一班用三元组表示：
ADT(D,S,P)
Ds数据对象
S是d上的关系
P是d上的操作
在定义抽象数据类型，可以用以下格式：
ADT
{数据对象：<定义>
数据关系；<定义>
数据操作：<定义>
}
可以对应一个java类；对象与关系可以通过成员变量表示
操作可以使用方法实现

